#include<bits/stdc++.h>
using namespace std;
 
#define fastkor ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define endl '\n'
#define ll long long int
 
#define dvect vector<int>vect
#define pb(x) push_back(x)
#define vectinL(n) for(ll i=0;i<n;i++){ ll x; cin >> x; vect.push_back(x);}
#define vectin(n) for(int i=0;i<n;i++){ int x; cin >> x; vect.push_back(x);}
#define vectout for(auto v: vect) cout<<v<<" "; cout<<endl;
#define sortkor(x) sort(x.begin(),x.end())
#define reversekor(x) reverse(x.begin(),x.end())
 
#define mini_pos(a)    ( min_element((a).begin(), (a).end()) - (a).begin())
#define maxi_pos(a)    ( max_element((a).begin(), (a).end()) - (a).begin())
 
#define F first
#define S second
#define YES cout<<"YES\n"
#define YES1 cout<<"Case "<<case++<<": YES\n"
#define NO cout<<"NO\n"
#define NO1 cout<<"Case "<<case++<<": NO\n"
#define precision(n) fixed<<setprecision(n)
#define testcase ll t; cin >>t; while(t--)
const double err=1e-9;
/// 29 --7 --- 21
int main()
{
    fastkor;
    testcase{
 
       int n;
       cin >> n;
       vector<int>v1;
       vector<int>v2;
       for(int i=0;i<n;i++)
       {
           int x;
           cin >> x;
           v1.pb(x);
       }
       for(int i=0;i<n;i++)
       {
           int x;
           cin >> x;
           v2.pb(x);
       }
       bool k=true;
        int l1=v1[n-1];
        int l2=v2[n-1];
 
        for(int i=0;i<n-1;i++)
        {
            if( (max(l1,l2)<max(v1[i],v2[i])) || (min(l1,l2)<min(v1[i],v2[i])))
                k=false;
        }
        if(k)
            cout<<"Yes\n";
        else
            cout<<"No\n";
 
    }
}
