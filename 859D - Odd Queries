#include<bits/stdc++.h>
using namespace std;
 
#define fastkor ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define endl '\n'
#define ll long long int
 
#define dvect vector<int>vect
#define pb(x) push_back(x)
#define vectinL(n) for(ll i=0;i<n;i++){ ll x; cin >> x; vect.push_back(x);}
#define vectin(n) for(int i=0;i<n;i++){ int x; cin >> x; vect.push_back(x);}
#define vectout for(auto v: vect) cout<<v<<" "; cout<<endl;
#define sortkor(x) sort(x.begin(),x.end())
#define reversekor(x) reverse(x.begin(),x.end())
 
#define mini_pos(a)    ( min_element((a).begin(), (a).end()) - (a).begin())
#define maxi_pos(a)    ( max_element((a).begin(), (a).end()) - (a).begin())
 
#define F first
#define S second
#define YES cout<<"YES\n"
#define YES1 cout<<"Case "<<case++<<": YES\n"
#define NO cout<<"NO\n"
#define NO1 cout<<"Case "<<case++<<": NO\n"
#define precision(n) fixed<<setprecision(n)
#define testcase ll t; cin >>t; while(t--)
const double err=1e-9;
/// 29 --7 --- 21
int main()
{
    fastkor;
    testcase
    {
        ll n,k;
        cin >> n>> k;
        vector<ll>vect;
        vectin(n);
 
        for(ll i=1; i<n; i++)
            vect[i]=vect[i]+vect[i-1];
 
      for(ll i=1;i<=k;i++){
            ll sum=vect[n-1];
        ll a,b,c;
        ll x=0;
        cin >>a  >> b >> c;
        ll temp=0;
        if(a==1)
        {
            b--;
            temp=vect[b];
            x++;
 
        }
        else
        {
            a--,b--;
            temp=vect[b]-vect[a-1];
        }
        //cout<<temp<<" "<<sum<<" ";
        //cout<<temp;
        sum-=temp;
        ll sz=b-a+1+x;
        sum+=(sz*c);
       if(sum&1)
        cout<<"YES\n";
       else
        cout<<"NO\n";
    }
    }
}
