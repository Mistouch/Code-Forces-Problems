#include<bits/stdc++.h>
using namespace std;

#define fastkor ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define endl '\n'
#define ll long long int

#define dvect vector<int>vect
#define pb(x) push_back(x)
#define vectinL(n) for(ll i=0;i<n;i++){ ll x; cin >> x; vect.push_back(x);}
#define vectin(n) for(int i=0;i<n;i++){ int x; cin >> x; vect.push_back(x);}
#define vectout for(auto v: vect) cout<<v<<" "; cout<<endl;
#define sortkor(x) sort(x.begin(),x.end())
#define reversekor(x) reverse(x.begin(),x.end())

#define mini_pos(a)    ( min_element((a).begin(), (a).end()) - (a).begin())
#define maxi_pos(a)    ( max_element((a).begin(), (a).end()) - (a).begin())

#define F first
#define S second
#define YES cout<<"YES\n"
#define YES1 cout<<"Case "<<case++<<": YES\n"
#define NO cout<<"NO\n"
#define NO1 cout<<"Case "<<case++<<": NO\n"
#define precision(n) fixed<<setprecision(n)
#define testcase ll t; cin >>t; while(t--)
const double err=1e-9;
/// 29 --7 --- 21
const int N=1e5+10;

int main()
{
    fastkor;
  testcase{
    int n;
    cin >> n;
    string s=to_string(n);
    int ln=s.size();
    int low=0,high=0;
    if(ln==1)
        high=9,low=1;
    else if(ln==2)
        high=99,low=10;
    else
        high=999,low=100;
   int ans=-1;
   int mn=INT_MAX;
    for(int i=low;i<=high;i++)
    {
        if(i%7==0)
        {
            string st=to_string(i);
            int cnt=0;
            for(int j=0;j<ln;j++)
            {
                if(s[j]!=st[j])
                    cnt++;
            }
            if(cnt<mn)
            {
                mn=cnt;
                ans=i;
            }

        }
    }
    cout<<ans<<"\n";
}
}
