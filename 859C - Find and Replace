#include<bits/stdc++.h>
using namespace std;
 
#define fastkor ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define endl '\n'
#define ll long long int
 
#define dvect vector<int>vect
#define pb(x) push_back(x)
#define vectinL(n) for(ll i=0;i<n;i++){ ll x; cin >> x; vect.push_back(x);}
#define vectin(n) for(int i=0;i<n;i++){ int x; cin >> x; vect.push_back(x);}
#define vectout for(auto v: vect) cout<<v<<" "; cout<<endl;
#define sortkor(x) sort(x.begin(),x.end())
#define reversekor(x) reverse(x.begin(),x.end())
 
#define mini_pos(a)    ( min_element((a).begin(), (a).end()) - (a).begin())
#define maxi_pos(a)    ( max_element((a).begin(), (a).end()) - (a).begin())
 
#define F first
#define S second
#define YES cout<<"YES\n"
#define YES1 cout<<"Case "<<case++<<": YES\n"
#define NO cout<<"NO\n"
#define NO1 cout<<"Case "<<case++<<": NO\n"
#define precision(n) fixed<<setprecision(n)
#define testcase ll t; cin >>t; while(t--)
const double err=1e-9;
/// 29 --7 --- 21
int main()
{
    fastkor;
    testcase{
 
      int n;
      cin >> n;
      string s;
      cin >> s;
        char x=s[0];
      for(int i=0;i<n;i++)
      {
 
          if(s[i]==x)
            s[i]='1';
      }
      bool k=true;
      for(int i=1;i<n;i++)
      {
          if(!isalpha(s[i]))
            continue;
          char t=s[i];
          char ck=s[i-1];
          for(int j=i;j<n;j++)
          {
              if(s[j]==t)
              {
                  if(ck=='0')
                    s[j]='1';
                  else if(ck=='1')
                    s[j]='0';
 
                  if(s[i]==s[i-1])
                    k=false;
              }
          }
      }
 
 
     bool p=true;
      for(int i=0;i<n-1;i++)
      {
          if(s[i]==s[i+1])
            p=false;
      }
      if(p)
        cout<<"YES\n";
      else
        cout<<"NO\n";
    }
}
