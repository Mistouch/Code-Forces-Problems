// ----------------------------------------SHAHRIA SARKER SHUVO -----------------------------------------
//-------------------------------------CSE North South University----------------------------------------
#include<bits/stdc++.h>
using namespace std;

#define fastkor ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define endl '\n'
#define ll long long

#define dvect vector<int>vect
#define pb(x) push_back(x)
#define vectinL(n) for(ll i=0;i<n;i++){ ll x; cin >> x; vect.push_back(x);}
#define vectin(n) for(int i=0;i<n;i++){ int x; cin >> x; vect.push_back(x);}
#define vectout(v) for(auto p: v) cout<<p<<" "; cout<<endl;
#define sortkor(x) sort(x.begin(),x.end())
#define reversekor(x) reverse(x.begin(),x.end())
#define all(vect) vect.begin(),vect.end()
#define mini_pos(a)    ( min_element((a).begin(), (a).end()) - (a).begin())
#define maxi_pos(a)    ( max_element((a).begin(), (a).end()) - (a).begin())

#define F first
#define S second
#define gcd(a,b) __gcd(a,b)
#define YES1 cout<<"Case "<<case++<<": YES\n"
#define NO1 cout<<"Case "<<case++<<": NO\n"
#define precision(n) fixed<<setprecision(n)
#define testcase ll t; cin >>t; while(t--)

#define yes cout<<"yes\n";
#define Yes cout<<Yes\n";
#define YES cout<<"YES\n"

#define no cout<<"no\n";
#define No cout<<"No\n";
#define NO cout<<"NO\n"
const int N=1e6+10;
const int dx[4]= {-1,0,1,0};
const int dy[4]= {0,1,0,-1};
vector<int>G[N];
vector<bool>vis(N);
const int mod=1e9+7;
ll fact[N+10];
vector<bool>isprime;
vector<int>primegula;
void sieve(ll n)
{
    isprime.assign(n+1,true);
    isprime[0]=isprime[1]=false;
    for(ll i=2; i*i<=n; i++)
    {
        if(!isprime[i])
            continue;
        for(int j=i*i; j<=n; j+=i)
            isprime[j]=false;

    }
    for(ll i=2; i<=n; i++)
    {
        if(isprime[i])
            primegula.pb(i);
    }
}
vector<ll> getpf(ll n)
{
    vector<ll>vv;
    for(auto v: primegula)
    {
        if(v*v>n)
            break;
            while(n%v==0)
            {
                n/=v;
                vv.push_back(v);
            }
    }
    if(n!=1)
        vv.push_back(n);

    return vv;
}
int main()
{
    fastkor;
    sieve(N);

    testcase
    {
      ll n;
      cin >> n;
      vector<ll>vect;
      vectinL(n);

      map<ll,ll>mp;

      for(auto x: vect)
      {
          vector<ll>v=getpf(x);

          for(auto p: v)
            mp[p]++;
      }

      bool ok=true;

      for(auto x: mp)
      {
         if(x.S%n!=0)
            ok=false;
      }

      if(ok)
        YES;
      else
        NO;
    }
}
