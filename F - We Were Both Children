#include<bits/stdc++.h>
using namespace std;

#define fastkor ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define endl '\n'
#define ll long long

#define dvect vector<int>vect
#define pb(x) push_back(x)
#define vectinL(n) for(ll i=0;i<n;i++){ ll x; cin >> x; vect.push_back(x);}
#define vectin(n) for(int i=0;i<n;i++){ int x; cin >> x; vect.push_back(x);}
#define vectout(v) for(auto p: v) cout<<p<<" "; cout<<endl;
#define sortkor(x) sort(x.begin(),x.end())
#define reversekor(x) reverse(x.begin(),x.end())
#define F first
#define S second
#define gcd(a,b) __gcd(a,b)
#define YES1 cout<<"Case "<<case++<<": YES\n"
#define NO1 cout<<"Case "<<case++<<": NO\n"
#define precision(n) fixed<<setprecision(n)
#define testcase ll t; cin >>t; while(t--)

int main()
{
    fastkor;
    testcase
    {
       ll n;
       cin >> n;
       vector<ll>vect;
       vector<ll>cnt(n+1,0);
       vector<ll>mx(n+1,0);

       for(int i=0;i<n;i++)
       {
           int x;
           cin >> x;

           if(x<=n)
               cnt[x]++;
       }

       ///ll mx=0;

       for(int i=1;i<=n;i++)
       {
           for(int j=i;j<=n;j+=i)
             mx[j]+=cnt[i];
       }

       cout<<*max_element(mx.begin(),mx.end())<<"\n";
    }
}
